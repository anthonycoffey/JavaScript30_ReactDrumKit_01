{"version":3,"sources":["sounds.js","App.js","serviceWorker.js","index.js"],"names":["sounds","key","file","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","title","hashtag","project","author","keys","allKeys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","wavs","entries","Symbol","iterator","next","done","_ref5","value","_ref2","slicedToArray","index","sound","push","react_default","a","createElement","data-key","src","concat","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","_ref3","_ref4","className","onClick","e","playSound","replace","_iterator2","window","addEventListener","k","audio","document","querySelector","currentTime","console","log","play","classList","add","setTimeout","remove","role","aria-label","href","rel","target","React","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0bbe0ff.chunk.js","sourcesContent":["export default [\r\n  {\r\n    key: 'a',\r\n    file: 'boom.wav'\r\n  },\r\n  {\r\n    key: 's',\r\n    file: 'clap.wav'\r\n  },\r\n  {\r\n    key: 'd',\r\n    file: 'hihat.wav'\r\n  },\r\n  {\r\n    key: 'f',\r\n    file: 'kick.wav'\r\n  },\r\n  {\r\n    key: 'g',\r\n    file: 'openhat.wav'\r\n  },\r\n  {\r\n    key: 'z',\r\n    file: 'ride.wav'\r\n  },\r\n  {\r\n    key: 'x',\r\n    file: 'snare.wav'\r\n  },\r\n  {\r\n    key: 'c',\r\n    file: 'tink.wav'\r\n  },\r\n  {\r\n    key: 'v',\r\n    file: 'tom.wav'\r\n  }\r\n]\r\n","import React from 'react';\nimport './App.scss';\nimport '@fortawesome/fontawesome-free/css/fontawesome.min.css'\nimport '@fortawesome/fontawesome-free/css/brands.min.css'\nimport wavs from './sounds.js'\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: `Welcome to the React Drum Kit!`,\n      hashtag: '#JavaScript30',\n      project: 'Drum Kit 01',\n      author: 'Anthony Coffey',\n      sounds: [],\n      keys: [],\n      allKeys: []\n    };\n\n    // audio elements\n    for(const [index, sound] of wavs.entries()) {\n      this.state.sounds.push(<audio data-key={sound.key} src={`sounds/${sound.file}`} key={index}></audio>)\n    }\n\n    // buttons / key elements\n    for(const [index, sound] of wavs.entries()) {\n      this.state.keys.push(<div className=\"key-wrapper\" key={index}>\n        <kbd className=\"key\" data-key={sound.key}\n                            onClick={(e) => this.playSound(sound.key)}>{sound.key}</kbd>\n        <span className=\"sound\">{sound.file.replace('.wav', '')}</span>\n      </div>)\n    }\n\n    window.addEventListener('keydown', (e) => {\n      if(e.key) {\n        this.playSound(e.key);\n      }\n    })\n  }\n\n  playSound(k) {\n    const audio = document.querySelector(`audio[data-key=\"${k}\"`);\n    const key = document.querySelector(`kbd[data-key=\"${k}\"]`);\n    if(!audio) return;\n    audio.currentTime = 0;\n    console.log(audio)\n    audio.play();\n    key.classList.add('playing','animated','heartBeat');\n    setTimeout(function(){\n      key.classList.remove('playing','animated','heartBeat')\n    }, 210)\n  }\n\n  render() {\n    return (<div className=\"App\">\n      <header>\n        <div className=\"hashtag\">\n          {this.state.hashtag}\n        </div>\n        <div className=\"project\">\n          {this.state.project}\n        </div>\n      </header>\n      <main>\n        <h1><span role=\"img\" aria-label=\"music notes\">ðŸŽ¶</span>{this.state.title}<span role=\"img\" aria-label=\"music notes\">ðŸŽ¶</span></h1>\n\n        <div className=\"introduction\">\n          <p><span role=\"img\" aria-label=\"wave\">ðŸ‘‹</span> Hello! My name is Anthony Coffey, and I was inspired to take the <a href=\"https://javascript30.com/\" rel=\"noopener noreferrer\" target=\"_blank\">#JavaScript30</a> challenge so I built a drum kit using React. <span role=\"img\" aria-label=\"cool\">ðŸ˜Ž</span></p>\n        </div>\n\n        <div className=\"keys\">\n          {this.state.keys}\n        </div>\n\n        <div className=\"instructions\">\n          <p>You can play the drum sounds play pressing the corresponding key on your keyboard, or by clicking/tapping the buttons below.</p>\n        </div>\n\n        {this.state.sounds}\n      </main>\n      <footer>\n        <span className=\"follow-me\">Follow Me on Social Media:</span>\n        <ul>\n          <li>\n            <i className=\"fab fa-github-square\"></i><a href=\"https://github.com/anthonycoffey\" rel=\"noopener noreferrer\" target=\"_blank\">Github</a>\n          </li>\n          <li>\n            <i className=\"fab fa-twitter-square\"></i><a href=\"https://twitter.com/CoffeyWebDev\" rel=\"noopener noreferrer\" target=\"_blank\">Twitter</a>\n          </li>\n          <li>\n            <i className=\"fab fa-facebook-square\"></i><a href=\"https://www.facebook.com/coffeyweb/\" rel=\"noopener noreferrer\" target=\"_blank\">Facebook</a>\n          </li>\n          <li>\n            <i className=\"fab fa-linkedin\"></i><a href=\"https://linkedin.com/in/coffeyanthony\" rel=\"noopener noreferrer\" target=\"_blank\">LinkedIn</a>\n          </li>\n        </ul>\n      </footer>\n    </div>)\n  };\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'animate.css/animate.min.css'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}